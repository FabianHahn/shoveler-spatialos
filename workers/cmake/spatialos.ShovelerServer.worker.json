{
  "build": {
    "tasks": [
      {
        "name": "Codegen",
        "steps": [
          {
            "name": "C++",
            "arguments": [
              "process_schema",
              "generate",
              "--cachePath=.spatialos/schema_codegen_cache",
              "--output=generated",
              "--language=cpp"
            ]
          }
        ]
      },
      {
        "name": "Build",
        "steps": [
          {
            "name": "Codegen",
            "arguments": [
              "invoke-task",
              "Codegen"
            ]
          },
          {
            "name": "Install dependencies",
            "arguments": [
              "worker_package",
              "unpack"
            ]
          },
          {
            "name": "Create build directory",
            "command": "mkdir",
            "arguments": [
              "-p",
              "build"
            ]
          },
          {
            "name": "Run CMake",
            "command": "bash",
            "arguments": [
              "cmake.sh"
            ]
          },
          {
            "name": "Build",
            "command": "bash",
            "arguments": [
              "cmake-build.sh",
              "ShovelerServer"
            ]
          },
          {
            "name": "Create build assembly workers directory",
            "command": "mkdir",
            "arguments": [
              "-p",
              "../../build/assembly/workers"
            ]
          },
          {
            "name": "Pack",
            "command": "bash",
            "arguments": [
              "cmake-pack.sh",
              "server",
              "ShovelerServer"
            ]
          }
        ]
      },
      {
        "name": "Clean",
        "steps": [
          {
            "name": "Generated code",
            "arguments": [
              "process_schema",
              "clean",
              "--cachePath=.spatialos/schema_codegen_cache",
              ".spatialos/schema_codegen_proto",
              "generated"
            ]
          },
          {
            "name": "Dependencies",
            "arguments": [
              "worker_package",
              "clean"
            ]
          },
          {
            "name": "Remove build directory",
            "command": "rm",
            "arguments": [
              "-rf",
              "build"
            ]
          }
        ]
      }
    ]
  },
  "bridge": {
    "worker_attribute_set": {
      "attributes": [
        "server"
      ]
    },
    "entity_interest": {
      "range_entity_interest": {
        "radius": 0
      }
    },
    "component_delivery": {
      "default": "RELIABLE_ORDERED",
      "checkout_all_initially": true
    }
  },
  "managed": {
    "windows": {
      "artifact_name": "ShovelerServer@Windows.zip",
      "command": "ShovelerServer.exe",
      "arguments": [
        "${IMPROBABLE_WORKER_ID}",
        "${IMPROBABLE_RECEPTIONIST_HOST}",
        "${IMPROBABLE_RECEPTIONIST_PORT}",
        "${IMPROBABLE_LOG_FILE}"
      ]
    },
    "macos": {
      "artifact_name": "ShovelerServer@Macos.zip",
      "command": "ShovelerServer",
      "arguments": [
        "${IMPROBABLE_WORKER_ID}",
        "${IMPROBABLE_RECEPTIONIST_HOST}",
        "${IMPROBABLE_RECEPTIONIST_PORT}",
        "${IMPROBABLE_LOG_FILE}"
      ]
    },
    "linux": {
      "artifact_name": "ShovelerServer@Linux.zip",
      "command": "ShovelerServer",
      "arguments": [
        "${IMPROBABLE_WORKER_ID}",
        "${IMPROBABLE_RECEPTIONIST_HOST}",
        "${IMPROBABLE_RECEPTIONIST_PORT}",
        "${IMPROBABLE_LOG_FILE}"
      ]
    }
  }
}
